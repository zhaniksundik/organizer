{"ast":null,"code":"import { DateService } from '../shared/date.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TasksService } from '../shared/tasks.service';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/date.service\";\nimport * as i2 from \"../shared/tasks.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/moment.pipe\";\n\nfunction OrganizerComponent_ul_9_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"span\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function OrganizerComponent_ul_9_li_1_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.remove(task_r4);\n    });\n    i0.ɵɵtext(6, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.title, \" \");\n  }\n}\n\nfunction OrganizerComponent_ul_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, OrganizerComponent_ul_9_li_1_Template, 7, 2, \"li\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.tasks);\n  }\n}\n\nfunction OrganizerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \"No tasks yet...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let OrganizerComponent = /*#__PURE__*/(() => {\n  class OrganizerComponent {\n    constructor(dateService, tasksService) {\n      this.dateService = dateService;\n      this.tasksService = tasksService;\n      this.tasks = [];\n    }\n\n    ngOnInit() {\n      this.dateService.date.pipe(switchMap(value => this.tasksService.load(value))).subscribe(tasks => {\n        this.tasks = tasks;\n      });\n      this.form = new FormGroup({\n        title: new FormControl('', Validators.required)\n      });\n    }\n\n    submit() {\n      const {\n        title\n      } = this.form.value;\n      const task = {\n        title,\n        date: this.dateService.date.value.format('DD-MM-YYYY')\n      };\n      this.tasksService.create(task).subscribe(task => {\n        this.tasks.push(task);\n        this.form.reset();\n      }, err => console.error(err));\n    }\n\n    remove(task) {\n      this.tasksService.remove(task).subscribe(() => {\n        this.tasks = this.tasks.filter(t => t.id !== task.id);\n      }, err => console.error(err));\n    }\n\n  }\n\n  OrganizerComponent.ɵfac = function OrganizerComponent_Factory(t) {\n    return new (t || OrganizerComponent)(i0.ɵɵdirectiveInject(i1.DateService), i0.ɵɵdirectiveInject(i2.TasksService));\n  };\n\n  OrganizerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrganizerComponent,\n    selectors: [[\"app-organizer\"]],\n    decls: 17,\n    vars: 10,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noTasks\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"title\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\"], [\"class\", \"task\", 4, \"ngFor\", \"ngForOf\"], [1, \"task\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"text-center\"]],\n    template: function OrganizerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\")(1, \"header\");\n        i0.ɵɵtext(2, \" Organizer: \");\n        i0.ɵɵelementStart(3, \"strong\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"moment\");\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"main\");\n        i0.ɵɵtemplate(9, OrganizerComponent_ul_9_Template, 2, 1, \"ul\", 0);\n        i0.ɵɵtemplate(10, OrganizerComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"footer\")(13, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function OrganizerComponent_Template_form_ngSubmit_13_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelement(14, \"input\", 3);\n        i0.ɵɵelementStart(15, \"button\", 4);\n        i0.ɵɵtext(16, \"Add\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, i0.ɵɵpipeBind1(6, 8, ctx.dateService.date), \"DD.MM.YYYY\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks.length)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName],\n    pipes: [i5.MomentPipe, i3.AsyncPipe],\n    styles: [\"section[_ngcontent-%COMP%]{border:1px solid #000;padding:1rem}section[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{margin-bottom:1rem}.task[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding:.5rem 1rem;border:1px solid #ccc;margin-bottom:.5rem}\"]\n  });\n  return OrganizerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}